column_types = rep("numeric", 561),
column_widths = rep(16, 561))
##filter for columns with mean or std
xcomp<-xtrain[,cols]
##combind test & train sets
xcomp<-rbind(xcomp, xtest[,cols])
##subject
subtrain <- read.csv("UCI HAR Dataset/train/subject_train.txt",
header = FALSE)
subtest <- read.csv("UCI HAR Dataset/test/subject_test.txt",
header = FALSE)
subject<-rbind(subtrain,subtest)
##activity
acttrain<-read.csv("UCI HAR Dataset/train/y_train.txt",
header = FALSE)
acttest<-read.csv("UCI HAR Dataset/test/y_test.txt",
header = FALSE)
activity<-rbind(acttrain, acttest)
##bind subject & activity to data frame
xcomp<-cbind(activity, subject, xcomp)
##label xcomp columns
colnames(xcomp)<- c("activity", "subject", as.character(features[cols,2]))
head(tidy)
head(xcomp)
tidy<-data.frame(matrix(ncol = 86))
for (i in 1:6){
subcomp<-subset(xcomp, activity == i)
for (j in 1:length(unique(xcomp$subject))) {
tidy[j,]<-colMeans(((subset(subcomp, activity == "STANDING" & subject == j))[,3:dim(xcomp)[2]]))
}}
head(tidy)
tidy<-data.frame(matrix(ncol = 86))
for (i in 1:6){
for (j in 1:length(unique(xcomp$subject))) {
tidy[j,]<-colMeans(((subset(xcomp, activity == i & subject == j))[,3:dim(xcomp)[2]]))
}}
head(tidy)
tidy<-data.frame(matrix(ncol = 88))
for (i in 1:6){
for (j in 1:length(unique(xcomp$subject))) {
tidy[j,]<-c(i,j,colMeans(((subset(xcomp, activity == i & subject == j))[,3:dim(xcomp)[2]])))
}}
head(tidy)
tidy<-data.frame(matrix(ncol = 88))
for (i in 1:6){
for (j in 1:length(unique(xcomp$subject))) {
tidy[j*i,]<-c(i,j,colMeans(((subset(xcomp, activity == i & subject == j))[,3:dim(xcomp)[2]])))
}}
head(tidy)
tidy[1:10,1:3]
tidy<-data.frame(matrix(ncol = 88))
for (i in 1:6){
for (j in 1:length(unique(xcomp$subject))) {
tidy[j*i,]<-c(i,i*j,colMeans(((subset(xcomp, activity == i & subject == j))[,3:dim(xcomp)[2]])))
}}
tidy[1:10,1:3]
##build table of means,
tidy<-data.frame(matrix(ncol = 88))
for (i in 1:6){
for (j in 1:length(unique(xcomp$subject))) {
tidy[j*i,]<-c(xcomp$activity,xcomp$subject,colMeans(((subset(xcomp, activity == i & subject == j))[,3:dim(xcomp)[2]])))
}}
warnings()
tidy[1:10,1:3]
tidy<-data.frame(matrix(ncol = 88))
for (i in 1:6){
for (j in 1:length(unique(xcomp$subject))) {
tidy[i,]<-colMeans((subset(xcomp, activity == i & subject == j))[,3:dim(xcomp)[2]])
)
##build table of means,
tidy<-data.frame(matrix(ncol = 88))
for (i in 1:6){
for (j in 1:length(unique(xcomp$subject))) {
tidy[i,]<-colMeans((subset(xcomp, activity == i & subject == j))[,3:dim(xcomp)[2]])
}}
##build table of means,
tidy<-data.frame(matrix(ncol = 88))
for (i in 1:6){
for (j in 1:length(unique(xcomp$subject))) {
tidy[((i-1)*30)+i,]<-colMeans((subset(xcomp, activity == i & subject == j))[,3:dim(xcomp)[2]])
}}
##build table of means,
tidy<-data.frame(matrix(ncol = 88))
for (i in 1:6){
for (j in 1:length(unique(xcomp$subject))) {
tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]
tidy[((i-1)*30)+j,]<-colMeans((subset(xcomp, activity == i & subject == j))[,3:dim(xcomp)[2]])
}}
##build table of means,
tidy<-data.frame(matrix(ncol = 88))
for (i in 1:6){
for (j in 1:length(unique(xcomp$subject))) {
tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]<-j
tidy[((i-1)*30)+j,]<-colMeans((subset(xcomp, activity == i & subject == j))[,3:dim(xcomp)[2]])
}}
tidy[((1-1)*30)+j, 1]<-1
tidy[((1-1)*30)+1, 1]<-1
tidy[((1-2)*30)+1, 1]<-2
with(j<-1,i<-1, (tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]<-j)
j<-1
i<-1
tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]<-j
j<-1
i<-2
tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]<-j
j<-2
i<-1
tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]<-j
j<-3
i<-1
tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]<-j
head(tidy)
j<-1
i<-2
tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]<-j
j<-2
i<-2
tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]<-j
j<-3
i<-2
tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]<-j
j<-3
i<-3
tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]<-j
j<-1
i<-3
tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]<-j
j<-2
i<-3
tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]<-j
j<-1
i<-4
tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]<-j
j<-2
i<-4
tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]<-j
j<-3
i<-4
tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]<-j
j<-1
i<-5
tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]<-j
j<-2
i<-5
tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]<-j
j<-3
i<-5
tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]<-j
j<-1
i<-6
tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]<-j
j<-2
i<-6
tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]<-j
j<-3
i<-6
tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]<-j
tidy[,1:2]
##build table of means,
tidy<-data.frame(matrix(ncol = 88))
for (i in 1:6){
for (j in 1:30) {
tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]<-j
tidy[i,]<-colMeans((subset(xcomp, activity == i & subject == j))[,3:88]
}}
##build table of means,
tidy<-data.frame(matrix(ncol = 88))
for (i in 1:6){
for (j in 1:30) {
tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]<-j
tidy[i,]<-colMeans(subset(xcomp, activity == i & subject == j))[,3:88]
}}
dim(xcomp)[2]
colMeans((subset(xcomp, activity == 1 & subject == 3))[,3:dim(xcomp)[2]])
colMeans((subset(xcomp, activity == 1 & subject == 3))[,3:88])
tidy<-data.frame(matrix(ncol = 88))
for (i in 1:6){
for (j in 1:30) {
tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]<-j
tidy[i,]<-colMeans((subset(xcomp, activity == i & subject == j))[,3:88]
}}
tidy<-data.frame(matrix(ncol = 88))
for (i in 1:6){
for (j in 1:30) {
tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]<-j
tidy[((i-1)*30)+j,]<-colMeans((subset(xcomp, activity == i & subject == j))[,3:88]
}}
##build table of means,
tidy<-data.frame(matrix(ncol = 88))
for (i in 1:6){
for (j in 1:30) (
tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]<-j
tidy[((i-1)*30)+j,]<-colMeans((subset(xcomp, activity == i & subject == j))[,3:88])
}
##build table of means,
tidy<-data.frame(matrix(ncol = 88))
for (i in 1:6)(
for (j in 1:30) (
tidy[((i-1)*30)+j, 1]<-i
tidy[((i-1)*30)+j, 2]<-j
tidy[((i-1)*30)+j,]<-colMeans((subset(xcomp, activity == i & subject == j))[,3:88])
)
##build table of means,
tidy<-data.frame(matrix(ncol = 88))
for (i in 1:6)(
for (j in 1:30) (
tidy[((i-1)*30)+j,]<-c(i,j,colMeans((subset(xcomp, activity == i & subject == j))[,3:88]))
)
##build table of means,
tidy<-data.frame(matrix(ncol = 88))
for (i in 1:6)(
for (j in 1:30) (
tidy[((i-1)*30)+j,]<-c(i,j,colMeans((subset(xcomp, activity == i & subject == j))[,3:88]))
))
head(tidy)
tidy[,1;3]
tidy[,1:3]
##alter activity to character
activitylabels<-read.csv("UCI HAR Dataset/activity_labels.txt", sep = " ", header = FALSE)
for (i in 1:length(tidy$activity)){
for (j in 1:6) {
if (tidy$activity[i] == j) {
tidy$activity[i]<-as.character(activitylabels$V2[j])
}}}
##label xcomp columns
colnames(xcomp)<- c("activity", "subject", as.character(features[cols,2]))
head(tidy)
##label xcomp columns
colnames(tidy)<- c("activity", "subject", as.character(features[cols,2]))
head(tidy)
##alter activity to character
activitylabels<-read.csv("UCI HAR Dataset/activity_labels.txt", sep = " ", header = FALSE)
for (i in 1:length(tidy$activity)){
for (j in 1:6) {
if (tidy$activity[i] == j) {
tidy$activity[i]<-as.character(activitylabels$V2[j])
}}}
tidy[,1:3]
##number of columns with mean or std
features<-read.csv("UCI HAR Dataset/features.txt", sep = " ", header = FALSE)
cols<-vector()
cols<-c(cols, grep("mean", features[,2]))
cols<-c(cols, grep("Mean", features[,2]))
cols<-c(cols, grep("std", features[,2]))
cols<-sort(cols)
##LaF Data
xtrain<-laf_open_fwf("UCI HAR Dataset/train/X_train.txt",
column_types = rep("numeric", 561),
column_widths = rep(16, 561))
xtest<-laf_open_fwf("UCI HAR Dataset/test/X_test.txt",
column_types = rep("numeric", 561),
column_widths = rep(16, 561))
##filter for columns with mean or std
xcomp<-xtrain[,cols]
##combind test & train sets
xcomp<-rbind(xcomp, xtest[,cols])
##subject
subtrain <- read.csv("UCI HAR Dataset/train/subject_train.txt",
header = FALSE)
subtest <- read.csv("UCI HAR Dataset/test/subject_test.txt",
header = FALSE)
subject<-rbind(subtrain,subtest)
##activity
acttrain<-read.csv("UCI HAR Dataset/train/y_train.txt",
header = FALSE)
acttest<-read.csv("UCI HAR Dataset/test/y_test.txt",
header = FALSE)
activity<-rbind(acttrain, acttest)
##bind subject & activity to data frame
xcomp<-cbind(activity, subject, xcomp)
##label xcomp columns
colnames(xcomp)<- c("activity", "subject", as.character(features[cols,2]))
##build table of means,
tidy<-data.frame(matrix(ncol = 88))
for (i in 1:6)(
for (j in 1:30) (
tidy[((i-1)*30)+j,]<-c(i,j,colMeans((subset(xcomp, activity == i & subject == j))[,3:88]))
))
##label tidy columns
colnames(tidy)<- c("activity", "subject", as.character(features[cols,2]))
##alter activity to character
activitylabels<-read.csv("UCI HAR Dataset/activity_labels.txt", sep = " ", header = FALSE)
for (i in 1:length(tidy$activity)){
for (j in 1:6) {
if (tidy$activity[i] == j) {
tidy$activity[i]<-as.character(activitylabels$V2[j])
}}}
tidy
tidy[,1:3]
colMeans((subset(xcomp, activity == 6 & subject == 30))[,3])
colMeans((subset(xcomp, activity == 6 & subject == 30))[3])
features<-read.csv("UCI HAR Dataset/features.txt", sep = " ", header = FALSE)
cols<-vector()
cols<-c(cols, grep("mean", features[,2]))
cols<-c(cols, grep("Mean", features[,2]))
cols<-c(cols, grep("std", features[,2]))
cols<-sort(cols)
xtrain<-laf_open_fwf("UCI HAR Dataset/train/X_train.txt",
column_types = rep("numeric", 561),
column_widths = rep(16, 561))
xtest<-laf_open_fwf("UCI HAR Dataset/test/X_test.txt",
column_types = rep("numeric", 561),
column_widths = rep(16, 561))
xcomp<-xtrain[,cols]
xcomp<-rbind(xcomp, xtest[,cols])
subtrain <- read.csv("UCI HAR Dataset/train/subject_train.txt",
header = FALSE)
subtest <- read.csv("UCI HAR Dataset/test/subject_test.txt",
header = FALSE)
subject<-rbind(subtrain,subtest)
acttrain<-read.csv("UCI HAR Dataset/train/y_train.txt",
header = FALSE)
acttest<-read.csv("UCI HAR Dataset/test/y_test.txt",
header = FALSE)
activity<-rbind(acttrain, acttest)
xcomp<-cbind(activity, subject, xcomp)
colnames(xcomp)<- c("activity", "subject", as.character(features[cols,2]))
tidy<-data.frame(matrix(ncol = 88))
for (i in 1:6)(
for (j in 1:30) (
tidy[((i-1)*30)+j,]<-c(i,j,colMeans((subset(xcomp, activity == i & subject == j))[,3:88]))
))
colnames(tidy)<- c("activity", "subject", as.character(features[cols,2]))
activitylabels<-read.csv("UCI HAR Dataset/activity_labels.txt", sep = " ", header = FALSE)
for (i in 1:length(tidy$activity)){
for (j in 1:6) {
if (tidy$activity[i] == j) {
tidy$activity[i]<-as.character(activitylabels$V2[j])
}}}
tidy
head(tidy)
write.table(tidy, "tidydata.txt", row.name=FALSE)
library(LaF)
##LaF Data
xtrain<-laf_open_fwf("UCI HAR Dataset/train/X_train.txt",
column_types = rep("numeric", 561),
column_widths = rep(16, 561))
xtest<-laf_open_fwf("UCI HAR Dataset/test/X_test.txt",
column_types = rep("numeric", 561),
column_widths = rep(16, 561))
##number of columns with mean or std
features<-read.csv("UCI HAR Dataset/features.txt", sep = " ", header = FALSE)
cols<-vector()
cols<-c(cols, grep("mean", features[,2], ignore.case=T))
cols<-c(cols, grep("std", features[,2], ignore.case=T))
cols<-sort(cols)
##filter for columns with mean or std
xcomp<-xtrain[,cols]
##combind test & train sets
xcomp<-rbind(xcomp, xtest[,cols])
##subject
subtrain <- read.csv("UCI HAR Dataset/train/subject_train.txt",
header = FALSE)
subtest <- read.csv("UCI HAR Dataset/test/subject_test.txt",
header = FALSE)
subject<-rbind(subtrain,subtest)
##activity
acttrain<-read.csv("UCI HAR Dataset/train/y_train.txt",
header = FALSE)
acttest<-read.csv("UCI HAR Dataset/test/y_test.txt",
header = FALSE)
activity<-rbind(acttrain, acttest)
##bind subject & activity to data frame
xcomp<-cbind(activity, subject, xcomp)
##label xcomp columns
colnames(xcomp)<- c("activity", "subject", as.character(features[cols,2]))
##build table of means,
tidy<-data.frame(matrix(ncol = 88))
for (i in 1:6)(
for (j in 1:30) (
tidy[((i-1)*30)+j,]<-c(i,j,colMeans((subset(xcomp, activity == i & subject == j))[,3:88]))
))
##label tidy columns
colnames(tidy)<- c("activity", "subject", as.character(features[cols,2]))
##alter activity to character
activitylabels<-read.csv("UCI HAR Dataset/activity_labels.txt", sep = " ", header = FALSE)
for (i in 1:length(tidy$activity)){
for (j in 1:6) {
if (tidy$activity[i] == j) {
tidy$activity[i]<-as.character(activitylabels$V2[j])
}}}
##LaF Data
xtrain<-laf_open_fwf("UCI HAR Dataset/train/X_train.txt",
column_types = rep("numeric", 561),
column_widths = rep(16, 561))
xtest<-laf_open_fwf("UCI HAR Dataset/test/X_test.txt",
column_types = rep("numeric", 561),
column_widths = rep(16, 561))
##number of columns with mean or std
features<-read.csv("UCI HAR Dataset/features.txt", sep = " ", header = FALSE)
cols<-vector()
cols<-c(cols, grep("mean", features[,2], ignore.case=T))
cols<-c(cols, grep("std", features[,2], ignore.case=T))
cols<-sort(cols)
##filter for columns with mean or std
xcomp<-xtrain[,cols]
##combind test & train sets
xcomp<-rbind(xcomp, xtest[,cols])
##subject
subtrain <- read.csv("UCI HAR Dataset/train/subject_train.txt",
header = FALSE)
subtest <- read.csv("UCI HAR Dataset/test/subject_test.txt",
header = FALSE)
subject<-rbind(subtrain,subtest)
##activity
acttrain<-read.csv("UCI HAR Dataset/train/y_train.txt",
header = FALSE)
acttest<-read.csv("UCI HAR Dataset/test/y_test.txt",
header = FALSE)
activity<-rbind(acttrain, acttest)
##bind subject & activity to data frame
xcomp<-cbind(activity, subject, xcomp)
##label xcomp columns
colnames(xcomp)<- c("activity", "subject", as.character(features[cols,2]))
##build table of means,
tidy<-data.frame(matrix(ncol = 88))
for (i in 1:6)(
for (j in 1:30) (
tidy[((i-1)*30)+j,]<-c(i,j,colMeans((subset(xcomp, activity == i & subject == j))[,3:88]))
))
##label tidy columns
colnames(tidy)<- c("activity", "subject", as.character(features[cols,2]))
tidy
head(tidy)
##alter activity to character
activitylabels<-read.csv("UCI HAR Dataset/activity_labels.txt", sep = " ", header = FALSE)
for (i in 1:length(tidy$activity)){
for (j in 1:6) {
if (tidy$activity[i] == j) {
tidy$activity[i]<-as.character(activitylabels$V2[j])
}}}
tidy
head(tidy)
tidy
##LaF Data
xtrain<-laf_open_fwf("UCI HAR Dataset/train/X_train.txt",
column_types = rep("numeric", 561),
column_widths = rep(16, 561))
xtest<-laf_open_fwf("UCI HAR Dataset/test/X_test.txt",
column_types = rep("numeric", 561),
column_widths = rep(16, 561))
##number of columns with mean or std
features<-read.csv("UCI HAR Dataset/features.txt", sep = " ", header = FALSE)
cols<-vector()
cols<-c(cols, grep("mean", features[,2], ignore.case=T))
cols<-c(cols, grep("std", features[,2], ignore.case=T))
cols<-sort(cols)
##filter for columns with mean or std
xcomp<-xtrain[,cols]
##combind test & train sets
xcomp<-rbind(xcomp, xtest[,cols])
##subject
subtrain <- read.csv("UCI HAR Dataset/train/subject_train.txt",
header = FALSE)
subtest <- read.csv("UCI HAR Dataset/test/subject_test.txt",
header = FALSE)
subject<-rbind(subtrain,subtest)
##activity
acttrain<-read.csv("UCI HAR Dataset/train/y_train.txt",
header = FALSE)
acttest<-read.csv("UCI HAR Dataset/test/y_test.txt",
header = FALSE)
activity<-rbind(acttrain, acttest)
##bind subject & activity to data frame
xcomp<-cbind(activity, subject, xcomp)
##label xcomp columns
colnames(xcomp)<- c("activity", "subject", as.character(features[cols,2]))
##build table of means,
tidy<-data.frame(matrix(ncol = 88))
for (i in 1:6)(
for (j in 1:30) (
tidy[((i-1)*30)+j,]<-c(i,j,colMeans((subset(xcomp, activity == i & subject == j))[,3:88]))
))
##label tidy columns
colnames(tidy)<- c("activity", "subject", as.character(features[cols,2]))
##alter activity to character
activitylabels<-read.csv("UCI HAR Dataset/activity_labels.txt", sep = " ", header = FALSE)
for (i in 1:length(tidy$activity)){
for (j in 1:6) {
if (tidy$activity[i] == j) {
tidy$activity[i]<-as.character(activitylabels$V2[j])
}}}
tidy
head(tidy)
write.table(tidy,"tidy.txt",row.name=F)
